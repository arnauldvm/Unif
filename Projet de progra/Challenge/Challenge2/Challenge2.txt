/*
Devoir 2 : Boucles & Invariants

Rappel des consignes générales de soumission :
----------------------------------------------

- Vous pouvez écrire des commentaires, comme vous le feriez dans un code C ;
- Hors des commentaires, n'utilisez que des cractères ASCII ;
- Respectez scrupuleusement les consignes de soumissions pour ne pas recevoir
  une cote nulle ;
- NE PAS TOUCHER AUX CARACTÈRES '#'. Ils sont placés aux bons endroits. Faites 
  en sorte de ne pas les inclure dans un commentaire...
- Utilisez un éditeur de texte qui permet la coloration de la syntaxe du C 
  (gedit sur linux, notepad++ sur windows, ...)

Consignes spécifiques Ã  ce devoir :
-----------------------------------

La manière exacte de spécifier les éléments complétant les invariants est 
détaillée dans l'énoncé. Veuillez vous y reporter pour de plus amples 
informations.

CONSEIL :
Ouvrez ce fichier dans gedit (ou autre), activez la coloration syntaxique du C,
ainsi que la mise en évidence des parenthèses correspondantes pour ne pas vous
tromper.
*/
/*
Invariant du SP1 : Écrire V lignes Ã  l'écran.
________________________________________________________________________________

Indiquez après ce commentaire vos six choix, comme indiqué dans l'énoncé 
(numéro de boite, suivi d'un point, suivi de la valeur numérique ou du nom de 
variable/constante de votre choix (pour les boites de 2, 5 et 6) ou dâ€™un nombre 
entre 1 et 7 correspondant Ã  votre choix pour les boite 1, 3 et 4).
 
Pour votre facilité, les six numéros de boite et les points sont déjÃ  indiqués.
Respectez l'ordre croissant des numéros de boite.
*/
1.6
2.k
3.4 
4.2
5.1
6.V
/* Encodez votre réponse Ã  l'invariant du SP1 ci-dessus */
#
/*
Fonction de terminaison du SP1 : Écrire V lignes Ã  l'écran. 
________________________________________________________________________________

Indiquez, après ce commentaire, l'expressions C qui décrit la valeur que prend 
votre fonction de terminaison 
*/

V+1-k

/* Indiquez ci-dessus votre fonction de terminaison pour le SP1 */
#
/*
Invariant du SP2 : Écrire, sur une ligne, H caractères.
________________________________________________________________________________

Indiquez après ce commentaire vos dix choix, comme indiqué dans l'énoncé 
(numéro de boite, suivi d'un point, suivi de la valeur numérique ou du nom de 
variable/constante de votre choix (pour les boites 1, 3, et 6 Ã  9) ou dâ€™un 
nombre entre 1 et 7 correspondant Ã  votre choix pour les boites 0, 2, 4 et 5).

Pour votre facilité, les dix numéros de boite et les points sont déjÃ  indiqués.
Respectez l'ordre croissant des numéros de boite.
*/
0.3
1.V
2.6
3.b
4.5
5.5
6.1
7.H
8.1
9.V
/* Encodez votre réponse Ã  l'invariant du SP2 ci-dessus */
#
/*
Fonction de terminaison du SP2 : Écrire, sur une ligne, H caractères.
________________________________________________________________________________

Indiquez, après ce commentaire, l'expressions C qui décrit la valeur que prend 
votre fonction de terminaison 
*/

H-1-b

/* Indiquez ci-dessus votre fonction de terminaison pour le SP2 */
#
/*
Indiquez après ce commentaire votre code.

Dans la suite, vous ne devez écrire QUE ce qui, selon vous, devrait remplacer la
 ligne "votre code viendra ici (variables + instructions)" dans le squelette 
 mentionné dans l'énoncé.

VOUS NE DEVEZ SURTOUT PAS : 
- Ajouter une ligne "#include <stdio.h>" ;
- Écrire "int main(){" ni la '}' qui ferme celle ouverte après 'main' ;
- Redéclarer V, H, C1 et C2. Ces constantes sont DÉJÃ€ déclarées. Si vous
  les redéclarez, la compilation et l'évaluation de votre code sera impossible.

Voici un exemple pour V = 4, H = 6, C1 = '<', C2 = '3', tel qu'il devrait apparaitre 
sur la sortie standard suite Ã  l'exécution de votre code :
<<<333
<<<333
333<<<
333<<<
*/

unsigned int k = 1, b = 1;

while(k <= V){
        b = 1;
        while(b <= H){
            if(k <= V/2){
                if(b <= (H/2))
                    printf("%c", C1);
                else
                    printf("%c", C2);
                b ++;
            }else{
                if(b <= (H/2))
                    printf("%c", C2);
                else
                    printf("%c", C1);
                b ++;
            }
        }
        k ++;
        printf("\n");
    }

/* Indiquez ci-dessus votre extrait de code. */
